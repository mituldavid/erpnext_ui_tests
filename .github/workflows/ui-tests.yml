name: UI

on:
  pull_request:
    paths-ignore:
      - '**.md'
  workflow_dispatch:
  schedule:
    # Run everday at midnight UTC / 5:30 IST
    - cron: '0 0 * * *'

concurrency:
  group: ui-develop-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    strategy:
      fail-fast: false

    name: UI Tests (Cypress)

    services:
      mysql:
        image: mariadb:10.3
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: YES
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - uses: actions/setup-node@v2
        with:
          node-version: 14
          check-latest: true

      - name: Add to Hosts
        run: |
          echo "127.0.0.1 test_site" | sudo tee -a /etc/hosts

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache cypress binary
        uses: actions/cache@v2
        with:
          path: ~/.cache
          key: ${{ runner.os }}-cypress-
          restore-keys: |
            ${{ runner.os }}-cypress-
            ${{ runner.os }}-

      - name: Install
        run: bash ${GITHUB_WORKSPACE}/.github/helper/install.sh
        env:
          DB: mariadb
          TYPE: ui

      - name: Instrument Source Code
        run: cd ~/frappe-bench/apps/erpnext/ && npx nyc instrument -x 'erpnext/public/dist/**' -x '**/*.bundle.js' --compact=true --reporter=clover --in-place erpnext

      - name: Site Setup
        run: cd ~/frappe-bench/ && bench --site test_site execute erpnext.setup.utils.before_tests

      - name: cypress pre-requisites
        run: cd ~/frappe-bench/apps/frappe && yarn add cypress-file-upload@^5 @testing-library/cypress@^8 --no-lockfile


      - name: Build Assets
        run: cd ~/frappe-bench/ && bench build
        env:
          CI: Yes

      - name: UI Tests
        run: cd ~/frappe-bench/ && bench --site test_site run-ui-tests erpnext_ui_tests --with-coverage --headless
        env:
          CYPRESS_RECORD_KEY: 337f2b59-a870-4aa7-aa1b-238eae185ab9

      - name: Show bench console if tests failed
        if: ${{ failure() }}
        run: cat ~/frappe-bench/bench_run_logs.txt

      - name: Log Coverage Report
        run: cat ~/frappe-bench/apps/erpnext_ui_tests/coverage/clover.xml
        
      - name: Upload Coverage Data
        uses: codecov/codecov-action@v2
        with:
          name: Cypress
          fail_ci_if_error: true
          root_dir: /home/runner/frappe-bench/apps/erpnext
          directory: /home/runner/frappe-bench/apps/erpnext_ui_tests/coverage/
          verbose: true
